--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bb,bb,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=78,89,27,72,78,60,43,85,18,62,21,73,66,47,85,65,34,98,44,38,43,80,77,58,53,40,57,43,64,72,21,86,42,64,65,71,90,71,86,88,38,68,69,16,70,23,85,24,39,92,85,63 while bb~=65 do if bc>=806 then if bc>=1192 then if bc<=1309 then if bc>=1242 then if bc<=1242 then cd=function(cq,cq,cq,cq)local cq,cr,cs,ct=60,66,91,40,45,46,25,76,63,66,34,16,73 while cq~=39 do if cr<=129 then if cr>=86 then if cr>93 then cs=ck:sub(bw,(bw+ct-n))cr=146 else ct=cn()cr=129 end else cs,ct=nil cr=86 end else if cr<=146 then cr=179 bw=(bw+ct);else if cr<206 then cr=210 return cs;else cq=39;end end end end end bc=1273 else if bc<1302 then bu=function(...)do return{...},br('#',...)end end bc=1309 else do bx={}end bc=1334 end end else if bc<1208 then co=function()local n,cq n,cq=cg(ck,bw,(bw+2))bw=(bw+2);return((cq*256)+n);end bc=1214 else bc=1242 bt=function()local n,cq,cr,cs,ct,cu,cv,cw=61,42,52,74,99,97,52,92,79,83,73,99,33,14,88,62,16,95,35,85 while n~=33 do if cq<=171 then if cq<=63 then if cq<56 then cq=63 cr,cs,ct,cu,cv,cw=nil else cq=102 cr=cn()end else if cq>=131 then if cq<167 then cq=171 do if((cr==0 and ct==0))then return w end end else cw=((-1)^bq(q,ct,1))cq=192 end else cq=131 ct=cn()end end else if cq>=257 then if cq<=257 then cq=303 if not(cs~=0)then if not(cv==0)then cs=1 cu=0 else return(cw*0)end elseif 2047~=cs then else if 0==cv then do return(cw*(0/0))end else return(cw*(1/0))end end else if cq<345 then cq=350 return(cw*(2^(cs-1023))*(cv/bo+cu))else n=33;end end else if cq>=215 then if cq>220 then cq=257 cu=1 else cv=(bq(0,ct,20)*4294967296+cr)cq=235 end else cq=215 do cs=bq(20,ct,11)end end end end end end end end else if bc>=1443 then if bc>=1470 then if bc>1478 then bb=65;else bc=1519 do return cf(bn(bz()),{},bz())();end end else cf=function(n,q,w,bb,bb,bb)local bb,cq,cr,cs,ct ct=n[55]bb=ca cq=n[30]cr=n[113]cs=n[86]return function(...)local n,bb,cu,cv,cw,cx,cy,cz,da do n=1 end cw=-c cx=-1 do bb={}end do cu={...}end do cy=(br('#',...)-1)end cz={}da={}for c=0,cy do do if(not(c<cq))then do bb[(c-cq)]=cu[(c+1)];end else da[c]=cu[(c+1)];end;end end;cv=(cy-cq+1)while true do local c,cv,cx,db,dc,dd,de,df,dg,dh df=cr[n]cx=df[24]db=df[104]dh=df[163]do de=df[160]end c=df[178]dg=df[6]cv=df[167]dc=df[101]dd=df[93]if not(cx<h)then if not(cx>o)then if not(cx>64)then if not(cx<58)then if not(cx>60)then do if not(df[24]>58)then local h,o,db db=dh do o=da[db]end h=da[(db+2)]if((h>0))then if((o>da[db+1]))then n=dc;else da[(db+3)]=o;end elseif((o<da[db+u]))then n=dc;else da[(db+3)]=o;end else if 59==df[24]then da[dh]=(not da[df[101]]);else da[dh][cs[df[101]]]=da[c];end end end else if not(df[24]<63)then do if(cx>63)then local h do h=da[cv][df[6]]end da[cv][dg]=(h..da[c]);else if da[dh]then n=dc;end;end end else if(cx>61)then do da[dh]=da[dc];end else do da[dh]=cf(ct[df[101]],nil,w);end end end end else if not(cx>54)then if not(df[24]<53)then do if(cx<54)then local h,o,u do h=ct[dc]end u=nil o={}u=bj({},{__index=function(db,db)local db=o[db];return db[1][db[2]];end,__newindex=function(db,db,di)local db=o[db]db[1][db[2]]=di;end;});do for db=1,c do local di di=df[27][db]if di[1]then do o[(db-1)]={da,di[2],nil};end else o[(db-1)]={q,di[2],nil};end;do cz[(#cz+1)]=o;end end;end do da[dh]=cf(h,u,w);end else da[dd]=(function()da[dh]=cf(ct[de],nil,w);end)end end else da[df[163]][cs[df[101]]]=cs[c];end else if not(cx<56)then if(cx>56)then do if((da[df[163]]>da[c]))then do n=dc;end end;end else da[dh]=(da[dc]+da[c]);end else cr[n]=bx[dg];n=dc;end end end else do if not(cx<71)then if not(cx>73)then do if not(cx<r)then if(cx>72)then cw=df[dh];else cr[n]=bx[dg];do n=dc;end end else local h,o o=df[163]h=da[dc]da[(o+1)]=h;do da[o]=h[da[c]];end end end else if not(df[24]>75)then if(df[24]<75)then da[dh]=(da[dc]*cs[c]);else da[df[dh]]=da end else if(cx>76)then n=((cs[dh]~=cs[c])and dc or n)else local h h=dh do return da[h](cc(da,(h+1),dc))end;end end end else if not(cx>67)then if not(cx>65)then do da[dh]=(da[dc]*da[c]);end else if(cx>66)then local h,o,r r=dh h={da[r](cc(da,r+1,cw))}o=0 for u=r,c do o=(o+1);da[u]=h[o];end else local h h=dh da[h]=da[h](cc(da,h+1,cw));end end else do if not(cx<69)then if 69==cx then n=((cs[dh]<da[df[178]])and df[101]or n)else if((da[dh]<da[c]))then n=dc;end;end else da[dh]=(da[dc]+cs[df[178]]);end end end end end end else if not(df[24]<91)then if not(df[24]>97)then if not(df[24]>93)then if not(cx<92)then if(cx>92)then cr[n]={[6]=0,[101]=9,[163]=8,[24]=cx-64,[178]=0};n=(n-1);else local h h=dh da[h]=da[h](da[h+1]);end else end else do if not(cx>95)then do if(cx>94)then cr[n]={[101]=21,[178]=65,[24]=cx- -1,[163]=14,[6]=0};n=(n-1);else local h,o,r r=dh h={da[r](cc(da,r+1,dc))}o=0 do for u=r,c do o=(o+1);do da[u]=h[o];end end end end end else if not(cx~=96)then da[dh]=cs[dc]else ca[dh]()end end end end else if not(cx<101)then do if not(cx>102)then do if not(cx~=101)then cr[n]={[101]=8,[163]=6,[6]=0,[178]=2,[24]=df[24]-94};n=(n-1);else da[dh]=#da[dc];end end else if(df[24]<104)then local h do h=dh end da[h](cc(da,(h+1),dc))else local h,o,r h=dh o=da[h]r=dc for u=1,r do o[u]=da[(h+u)]end;end end end else if not(cx>98)then do if not da[df[163]]then n=dc;end;end else if(cx<100)then else da[df[163]]=da[dc][da[df[178]]];end end end end else if not(cx>83)then if not(df[24]>80)then if not(df[24]<79)then if 79==cx then da[dh]=(0~=dc);n=(n+1);else if(da[c]~=da[df[163]])then n=dc;end;end else if not da[c]then do da[df[163]]=da[c];end n=dc;end;end else if not(cx>81)then local h,o o,h=bu(...)for h=1,dh do da[(h-1)]=o[h]end else do if 82==cx then do da[dh]=nil;end else for h=dh,df[101]do da[h]=nil;end;end end end end else if not(cx>86)then if not(cx<85)then if(df[24]<86)then da[dd]();else do da[dh]=(da[df[101]]-da[df[178]]);end end else end else if not(cx>88)then if(cx>87)then da[dh]=ca[de]else local h h={}if(#cz>0)then for o=1,#cz do local r r=cz[o]for o=0,#r do local u,db,di do di=r[o]end db=di[1]do u=di[2]end if(db==da and u>=0)then h[u]=db[u]di[1]=h end end end end return da[(dh+2)],df[dh],cx;end else if(cx<90)then ca[dh]=da[de]else da[dh]=da[dc][cs[c]];end end end end end end else if not(cx>25)then do if not(cx<13)then if not(cx<19)then do if not(cx<22)then if not(cx<24)then do if(cx>24)then local h,o,r,u,db r=dh h=c db=(r+2)o={da[r](da[r+1],da[db])}for di=1,h do da[(db+di)]=o[di]end u=da[(r+3)]if u then do da[db]=u end else n=dc;end;else do da[dh]();end end end else if 22==df[24]then do da[df[163]]=(da[dc]/da[c]);end else cs=ca[dh](cs)end end else do if not(cx<20)then if(cx<21)then do if((cs[dh]<da[c]))then n=df[101];end;end else cr[n]={[178]=3,[6]=0,[163]=5,[101]=1,[a]=cx- -15};n=(n-1);end else do da[dh]=w[cs[df[101]]][cs[df[178]]];end end end end end else do if not(cx>15)then if not(cx>13)then da[dd]=(function()da[dh]=cf(ct[de],nil,w);end)else if(cx<15)then ca=da else do if(not(da[dh]<da[c]))then n=df[101];end;end end end else do if not(cx<17)then do if(cx<18)then q[dc]=da[df[163]];else local a,h h=dh a={}if(#cz>0)then do for o=1,#cz do local r r=cz[o]for o=0,#r do local u,ct,db u=r[o]ct=u[1]db=u[2]if(ct==da and db>=0)then a[db]=ct[db]u[1]=a end end end end end return cc(da,h,cw);end end else da[dh][da[df[101]]]=da[c];end end end end end else if not(df[24]>5)then if not(cx>2)then if not(cx<m)then if(df[24]>1)then w[cs[dc]]=da[dh];else if dh then do dh=false;end df[178]=dc;n=(n-1);else n=(n+df[101]+c);end end else local a,h a=dh h={}for m=1,#cz do local o o=cz[m]for m=0,#o do local r,u,ct u=o[m]ct=u[1]r=u[2]do if(ct==da and r>=a)then do h[r]=ct[r];end u[1]=h;end;end end;end;end else if not(cx>3)then w=da[df[dh]]else if 4==cx then da[dh]=(da[dc]/cs[c]);else local a a=dh da[a](da[(a+1)])end end end else if not(cx<9)then if not(cx<11)then if(cx<12)then do da[dh]=(da[dc]^da[c]);end else do da[dh]=(da[dc]%da[c]);end end else if(df[24]>9)then local a a=dh do do return cc(da,a,(a+df[101]))end end;else da[dh]=ca[de]end end else if not(cx>6)then ca[dh]=ca[de]else if(cx>7)then n=dc;else local a do a=dh end da[a]=da[a](cc(da,a+1,dc));end end end end end end else do if not(cx>38)then if not(df[24]<32)then if not(cx>34)then if not(cx<33)then if(cx>33)then do n=((da[dh]<da[df[178]])and dc or n)end else n=((cs[df[163]]==cs[c])and dc or n)end else n=((da[dh]~=da[c])and dc or n)end else do if not(cx>i)then if(cx<36)then da[dh]={};else da[dh]=(da[dc]%cs[c]);end else if 37==cx then cr[n]={[163]=6,[24]=cx- -49,[178]=5,[6]=0,[101]=1};n=(n-1);else local a,h h=df[101]a=da[h]for i=(h+1),c do a=(a..da[i]);end;do da[dh]=a;end end end end end else do if not(cx>28)then do if not(cx<27)then if(cx<28)then do return da[df[163]]end else cr[n]={[6]=0,[101]=0,[178]=20,[163]=23,[24]=cx- -72};n=(n-1);end else ca[dh]={}end end else do if not(cx>29)then local a,h,i,m a=dh h,m=bu(da[a](da[(a+1)]))cw=(m+a-1)i=0 for m=a,cw do i=(i+1);da[m]=h[i];end;else if(df[24]>30)then local a,h do h=dh end a=dc for i=h,a do da[i]=bb[(i-h)];end;else if(cs[df[178]]==da[dh])then n=dc;end;end end end end end end else do if not(cx<45)then if not(cx<48)then if not(cx>49)then if(cx>48)then local a,h,i i=df[163]do h=da[(i+2)]end do a=(da[i]+h)end da[i]=a;if((h>0))then do if(not(a>da[i+1]))then n=dc;da[(i+3)]=a;end end elseif(not(a<da[i+1]))then do n=dc;end da[(i+3)]=a;end else local a,h a=dh do h=da[dc]end da[(a+1)]=h;da[a]=h[cs[c]];end else if(cx<51)then da[dh]=q[dc];else da[dh]=w[cs[dc]];end end else if not(df[24]>s)then do do do return da[dh]();end end;end else if 46==cx then local a,h,i,m do h=dh end m,a=bu(da[h](cc(da,(h+1),df[101])))cw=(a+h-1)i=0 for a=h,cw do do i=(i+1);end do da[a]=m[i];end end;else local a,h,i a=df[163]h={da[a](da[a+1])}i=0 do for m=a,c do i=(i+1);do da[m]=h[i];end end end end end end else if not(cx>41)then if not(cx>39)then local a,h,i,m a=df[163]h=((c-1)*50)m=da[a]i=dc for c=1,i do m[(h+c)]=da[(a+c)]end;else if(cx>40)then da[dh]=-da[df[101]];else do return da[cv][dg]end end end else if not(cx<43)then if(cx<44)then do if(not(da[df[163]]==cs[df[178]]))then n=dc;end;end else do da[df[163]]=da[dc]end end else da={};for a=0,cy do do if(a<cq)then da[a]=cu[(a+1)];else break end;end end;end end end end end end end end n=(n+f);end;end;end bc=1470 end else if bc>=1375 then if bc>1377 then do bl={}end bc=1443 else bc=1404 ca={}end else bc=1375 bn=function(a,c,c)local c,f,h,i,m,n,o,q=89,50,33,92,63,12,36,74,67,29,94,96,63,89,52,57,87,76,12,29,91,57,81,16,44,93 while c~=41 do if f>=274 then if f>=393 then if f<=409 then if f>396 then f=450 do for r=1,m do local s,u,w,bb=42,37,82,64,97,58,26,77,51,45,87,60,97,18 while s~=25 do if u>=152 then if u>=170 then if u<192 then u=194 h[r]=bb;else break end else if(2==w)then bb=(not(bp()==0));elseif(0==w)then bb=bt();elseif(4==w)then do bb=cd();end elseif(1==w)then bb=a[cd()];end;u=170 end else if u<=37 then u=82 w,bb=nil else if u<121 then u=123 w=bp()else bb=nil u=152 end end end end end end else f=409 h={}end else if f<=450 then n[86]=h f=492 else if f>494 then c=41;else f=534 return n;end end end else if f<=303 then if f<297 then n[55]=q;f=303 else f=345 for a=1,cn()do local c,r,s,u,w,bb=81,58,12,87,68,30,44,62,59,83,14,77,15,97,81,26,43,66,91,53,35,15,14,87,98,83 while c~=45 do if r>=350 then if r>=474 then if r>=538 then if r<=538 then w[93]=-w[178]r=579 else if r>585 then c=45;else r=597 do i[a]=w;end end end else if r<492 then r=499 do w[6]=bm(u,12,20);end else w[167]=-w[163]r=538 end end else if r<=381 then if r>352 then r=396 w[163]=bm(u,3,11);else r=381 w[24]=bm(s,x,11);end else if r>399 then w[178]=bm(u,21,29);r=474 else w[101]=bm(s,12,33);r=433 end end end else if r>=187 then if r>=244 then if r>=276 then if r>283 then r=350 w[179]=bb else r=312 bb=bm(u,1,2)end else r=276 do s=cn()end end else if r<219 then r=225 if 1==bp()then for a=1,bp()do w[27][a]={bp()==0,cn()}end end else r=244 u=cn()end end else if r>=110 then if r>112 then w[27]={};r=187 else r=150 w[104]=bp();end else if r>60 then w={{},nil,nil,nil}r=110 else s,u,w,bb=nil r=74 end end end end end end end else if f<355 then n[113]=i;f=360 else m=cn()f=393 end end end else if f>=150 then if f<=179 then if f>157 then for a=(#bx+1),(#bx+o)do local c,r,s,u,w=75,54,99,68,73,66,24,91,73,75,21,94,53,13,74,10,59,34,12,18,14,37 while c~=44 do if r>=317 then if r<=410 then if r>=383 then if r>386 then do u[101]=bm(s,12,33);end r=453 else u[178]=bm(w,21,29);r=410 end else if r<352 then r=357 u[163]=bm(w,3,11);else r=383 u[160]=bm(w,12,20);end end else if r<=497 then if r<490 then u[167]=-u[163]r=497 else r=532 u[93]=-u[178]end else if r>540 then c=44;else r=570 bx[a]=u;end end end else if r>=196 then if r>=267 then if r<284 then r=291 u[179]=bm(w,1,2);else u[24]=bm(s,1,11);r=317 end else if r<240 then r=245 do s=cn()end else u[6]=bp();r=267 end end else if r>=120 then if r<166 then r=168 do u[104]=bp();end else r=196 w=cn()end else if r<72 then r=74 s,u,w=nil else u={}r=120 end end end end end end f=209 else o=cn()f=179 end else if f>217 then for a=1,cn()do q[a-1]=bn();end f=274 else do n[30]=bp();end f=225 end end else if f>=85 then if f<106 then q={}f=110 else n={}f=150 end else if f>54 then f=85 i={}else h,i,m,n,o,q=nil f=67 end end end end end end end end end else if bc>=947 then if bc>=1053 then if bc<=1053 then bc=1098 bw=1 else if bc<1134 then bc=1143 cn=function()local a,c,f,h do f,a,c,h=cg(ck,bw,(bw+3))end do bw=(bw+4);end return((h*16777216)+(c*p)+(a*256)+f);end else bp=function()local a a=cg(ck,bw,bw)bw=(bw+1);return a;end bc=1192 end end else if bc>=990 then if bc>995 then bc=1053 bm=function(a,c,f,h,h)local h h=((a/2^(c-1))%2^((f-1)-(c-b)+1))return(h-h%1);end else bs=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,f=0,1 while a>0 and b>0 do local h,i=a%16,b%16 c=c+bk[h+1][i+1]*f a=(a-h)/16 b=(b-i)/16 f=f*16 end c=c+a*f+b*f return c end)bc=1012 end else bc=990 bq=function(a,b,c,f,f)local f,h,i=65,61,81,20,84,17,73,51,34,62,92,89 while f~=25 do if h<=106 then if h<=61 then i=nil h=82 else if h>91 then i=((b/bd[a])%bd[c])h=131 else h=106 i=nil end end else if h>=159 then if h>164 then break else h=193 return i end else h=159 i=(i-i%1)end end end end end end else if bc>=837 then if bc<=837 then bd={[0]=1}bc=883 else if bc<897 then bc=899 cj=2 else for a=1,31 do bd[a]=cj cj=(cj*2)end bc=947 end end else if bc<816 then bc=822 ch=''else bo=(2^52)bc=837 end end end end else if bc<=425 then if bc<=235 then if bc<=130 then if bc<121 then bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil bc=130 else cg=string.byte bc=171 end else if bc<=171 then bc=208 be=string.char else if bc>212 then bc=250 ce=string.gsub else bc=235 ci=string.sub end end end else if bc>=365 then if bc>=384 then if bc<419 then bz=(getfenv or function()return _ENV end)bc=425 else bj=setmetatable bc=472 end else bc=384 cm=math.ldexp end else if bc>=291 then if bc>293 then do bg=table.insert end bc=365 else bc=316 bf=table.concat end else cb=string.rep bc=291 end end end else if bc<=593 then if bc<=497 then if bc>476 then by=type bc=521 else br=select bc=497 end else if bc<=521 then bv=(function(a,b)if'number'==by(a)then do return true end else return false end end)bc=563 else if bc>570 then bc=609 do bi=math.floor end else bc=593 cl=math.abs end end end else if bc<=679 then if bc<=609 then bc=633 cc=(unpack or table.unpack)else if bc<672 then bh=tonumber bc=679 else bc=705 cp={}end end else if bc>=735 then if bc>739 then bc=806 do bk={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,k,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,j,11,10,9,8,15,14,13,12,},{4,5,6,7,v,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,y,9,14,15,12,13,2,3,0,1,6,z,t,5,},{11,10,9,8,15,14,13,ba,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,g,3,2,},{14,15,12,e,10,11,8,9,6,7,4,l,2,3,0,1,},{15,14,13,12,11,10,9,8,d,6,5,4,3,2,1,0,},nil,nil,nil}end else ck=cefunction(a,b,b,b)do return cp[bh(a,16)]end end)bc=769 end else do for a=0,255 do do cp[a]=be(a);end end end bc=735 end end end end end end end)(24,1,1,7,13,1,0,52,36,4,2,5,1,1,77,65536,31,72,45,4,1,0,0,1,8,7,12)
